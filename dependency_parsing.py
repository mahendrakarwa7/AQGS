# -*- coding: utf-8 -*-
"""dependency_parsing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14EYkEY3K9bC6zrwxAm05T-iZdKCTzFll
"""

import spacy

# Load the Spacy model
nlp = spacy.load("en_core_web_sm")

# Input text
text = """Aspirin is a salicylate (sa-LIS-il-ate). It works by reducing substances in the body that cause pain, fever, and inflammation. Aspirin is used to treat pain, and reduce fever or inflammation. It is sometimes used to treat or prevent heart attacks, strokes, and chest pain (angina). Aspirin should be used for cardiovascular conditions only under the supervision of a doctor."""

# Process the text with Spacy
doc = nlp(text)

# Function to find the main verb in a sentence
def find_main_verb(sent):
    for token in sent:
        if token.head == token:  # Finds the main verb
            return token
    return None

# Function to generate questions
def generate_questions(doc):
    questions = []
    for sent in doc.sents:
        main_verb = find_main_verb(sent)
        for token in sent:
            if token.dep_ == "nsubj" and main_verb:  # Subject and main verb relation
                questions.append(f"What does {token.text} {main_verb.lemma_}?")
            if token.dep_ == "prep" and token.head.dep_ == "pobj":  # Prepositional phrase
                prep_phrase = " ".join([child.text for child in token.children if child.dep_ == "pobj"])
                questions.append(f"Under what conditions should {prep_phrase} be used?")
            if token.dep_ == "advmod" and token.head.dep_ == "ROOT":  # Adverbial modifier
                questions.append(f"Why should {sent.text}?")
    return questions

# Generate questions
questions = generate_questions(doc)
for question in questions:
    print(question)